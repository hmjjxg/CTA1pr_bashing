xlab("2mM H2O2, time (min)")
#scale_y_continuous(limits = c(NA, 22))
#ggsave("output/OL_oxi.png", width = 6, height = 8)
##### 2mM H2O2 OL variants at 0min, 90min, 120min
tp_GFP <- function(...){
all_tp <- list(...)
for (input_tp in all_tp) {
df_tp <- oxi.dat %>% filter(new_time == input_tp)
print(ggplot(df_tp, aes(x = genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .99, color = "Red", linewidth = 1, size = 0.8) +
labs(x =paste0("2mM H2O2, OL variants", deparse1(substitute(input_tp)), " min"), y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),))
}
}
oxi.dat %>%
filter(new_time == 90) %>%
ggplot(aes(x = genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .99, color = "Red", linewidth = 1, size = 0.8) +
labs(x ="2mM H2O2, OL variants, 90 min", y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),)
tp_GFP(0)
# recode the genotype
levels <- c(WT = "wt", PC = "rescue",`4OL` = "4OL", `6OL` = "6OL", `8OL` = "8OL", `10OL` = "10OL")
oxi.dat <- data.ol.oxi %>%
filter(genotype %in% c("wt", "4OL", "6OL", "8OL", "10OL","rescue")) %>%
select(Time, replicate = Replicate, genotype, median) %>%
mutate(Genotype = fct_recode(genotype, !!!levels)) %>%
mutate(new_median =median/1000) %>%
mutate(new_time = as.numeric(gsub("min","",Time)))%>%
arrange(new_time, genotype, replicate)
genotype_color <- RColorBrewer::brewer.pal(8, "Dark2")[c(8, 7, 6, 1, 5, 4)]
names(genotype_color) <- names(levels)
oxi.dat %>%
filter(!is.na(new_median)) %>%
ggplot(aes(x = new_time, y = new_median, color = Genotype)) + p.timecourse +
scale_color_manual(values= genotype_color, limits = names(genotype_color)) +
xlab("2mM H2O2, time (min)")
#scale_y_continuous(limits = c(NA, 22))
#ggsave("output/OL_oxi.png", width = 6, height = 8)
##### 2mM H2O2 OL variants at 0min, 90min, 120min
tp_GFP <- function(...){
all_tp <- list(...)
for (input_tp in all_tp) {
df_tp <- oxi.dat %>% filter(new_time == input_tp)
print(ggplot(df_tp, aes(x = genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .99, color = "Red", linewidth = 1, size = 0.8) +
labs(x =paste0("2mM H2O2, OL variants", deparse1(substitute(input_tp)), " min"), y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),))
}
}
oxi.dat %>%
filter(new_time == 90) %>%
ggplot(aes(x = genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .99, color = "Red", linewidth = 1, size = 0.8) +
labs(x ="2mM H2O2, OL variants, 90 min", y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),)
tp_GFP(0)
# recode the genotype
levels <- c(WT = "wt", PC = "rescue",`4OL` = "4OL", `6OL` = "6OL", `8OL` = "8OL", `10OL` = "10OL")
oxi.dat <- data.ol.oxi %>%
filter(genotype %in% c("wt", "4OL", "6OL", "8OL", "10OL","rescue")) %>%
select(Time, replicate = Replicate, genotype, median) %>%
mutate(Genotype = fct_recode(genotype, !!!levels)) %>%
mutate(new_median =median/1000) %>%
mutate(new_time = as.numeric(gsub("min","",Time)))%>%
arrange(new_time, genotype, replicate)
genotype_color <- RColorBrewer::brewer.pal(8, "Dark2")[c(8, 7, 6, 1, 5, 4)]
names(genotype_color) <- names(levels)
oxi.dat %>%
filter(!is.na(new_median)) %>%
ggplot(aes(x = new_time, y = new_median, color = Genotype)) + p.timecourse +
scale_color_manual(values= genotype_color, limits = names(genotype_color)) +
xlab("2mM H2O2, time (min)")
#scale_y_continuous(limits = c(NA, 22))
#ggsave("output/OL_oxi.png", width = 6, height = 8)
##### 2mM H2O2 OL variants at 0min, 90min, 120min
tp_GFP <- function(...){
all_tp <- list(...)
for (input_tp in all_tp) {
df_tp <- oxi.dat %>% filter(new_time == input_tp)
print(ggplot(df_tp, aes(x = genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .99, color = "Red", linewidth = 1, size = 0.8) +
labs(x =paste0("2mM H2O2, OL variants", deparse1(substitute(input_tp)), " min"), y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),))
}
}
tp_GFP(0,90,120)
# recode the genotype
levels <- c(WT = "wt", PC = "rescue",`4OL` = "4OL", `6OL` = "6OL", `8OL` = "8OL", `10OL` = "10OL")
oxi.dat <- data.ol.oxi %>%
filter(genotype %in% c("wt", "4OL", "6OL", "8OL", "10OL","rescue")) %>%
select(Time, replicate = Replicate, genotype, median) %>%
mutate(Genotype = fct_recode(genotype, !!!levels)) %>%
mutate(new_median =median/1000) %>%
mutate(new_time = as.numeric(gsub("min","",Time)))%>%
arrange(new_time, genotype, replicate)
genotype_color <- RColorBrewer::brewer.pal(8, "Dark2")[c(8, 7, 6, 1, 5, 4)]
names(genotype_color) <- names(levels)
oxi.dat %>%
filter(!is.na(new_median)) %>%
ggplot(aes(x = new_time, y = new_median, color = Genotype)) + p.timecourse +
scale_color_manual(values= genotype_color, limits = names(genotype_color)) +
xlab("2mM H2O2, time (min)")
#scale_y_continuous(limits = c(NA, 22))
#ggsave("output/OL_oxi.png", width = 6, height = 8)
##### 2mM H2O2 OL variants at 0min, 90min, 120min
tp_GFP <- function(...){
all_tp <- list(...)
for (input_tp in all_tp) {
df_tp <- oxi.dat %>% filter(new_time == input_tp)
print(ggplot(df_tp, aes(x = genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .99, color = "Red", linewidth = 1, size = 0.8) +
labs(x =paste0("2mM H2O2, OL variants ", deparse1(substitute(input_tp)), " min"), y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),))
}
}
tp_GFP(0,90,120)
# recode the genotype
levels <- c(WT = "wt", PC = "rescue",`4OL` = "4OL", `6OL` = "6OL", `8OL` = "8OL", `10OL` = "10OL")
oxi.ol.dat <- data.ol.oxi %>%
filter(genotype %in% c("wt", "4OL", "6OL", "8OL", "10OL","rescue")) %>%
select(Time, replicate = Replicate, genotype, median) %>%
mutate(Genotype = fct_recode(genotype, !!!levels)) %>%
mutate(new_median =median/1000) %>%
mutate(new_time = as.numeric(gsub("min","",Time)))%>%
arrange(new_time, genotype, replicate)
genotype_color <- RColorBrewer::brewer.pal(8, "Dark2")[c(8, 7, 6, 1, 5, 4)]
names(genotype_color) <- names(levels)
oxi.ol.dat %>%
filter(!is.na(new_median)) %>%
ggplot(aes(x = new_time, y = new_median, color = Genotype)) + p.timecourse +
scale_color_manual(values= genotype_color, limits = names(genotype_color)) +
xlab("2mM H2O2, time (min)")
#scale_y_continuous(limits = c(NA, 22))
#ggsave("output/OL_oxi.png", width = 6, height = 8)
##### 2mM H2O2 OL
tp_GFP <- function(...){
all_tp <- list(...)
for (input_tp in all_tp) {
df_tp <- oxi.ol.dat %>% filter(new_time == input_tp)
print(ggplot(df_tp, aes(x = genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .99, color = "Red", linewidth = 1, size = 0.8) +
labs(x =paste0("2mM H2O2, OL variants ", deparse1(substitute(input_tp)), " min"), y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),))
}
}
# plot the 2mM H2O2 OL variants at 0min, 90min, 120min timepoints
tp_GFP(0,90,120)
tp_GFP(0,90,120,240)
# recode the genotype
levels <- c(WT = "wt", PC = "rescue",`4OL` = "4OL", `6OL` = "6OL", `8OL` = "8OL", `10OL` = "10OL")
oxi.ol.dat <- data.ol.oxi %>%
filter(genotype %in% c("wt", "4OL", "6OL", "8OL", "10OL","rescue")) %>%
select(Time, replicate = Replicate, genotype, median) %>%
mutate(Genotype = fct_recode(genotype, !!!levels)) %>%
mutate(new_median =median/1000) %>%
mutate(new_time = as.numeric(gsub("min","",Time)))%>%
arrange(new_time, genotype, replicate)
genotype_color <- RColorBrewer::brewer.pal(8, "Dark2")[c(8, 7, 6, 1, 5, 4)]
names(genotype_color) <- names(levels)
oxi.ol.dat %>%
filter(!is.na(new_median)) %>%
ggplot(aes(x = new_time, y = new_median, color = Genotype)) + p.timecourse +
scale_color_manual(values= genotype_color, limits = names(genotype_color)) +
xlab("2mM H2O2, time (min)")
#scale_y_continuous(limits = c(NA, 22))
#ggsave("output/OL_oxi.png", width = 6, height = 8)
##### 2mM H2O2 OL timepoint plot function
tp_GFP <- function(...){
all_tp <- list(...)
for (input_tp in all_tp) {
df_tp <- oxi.ol.dat %>% filter(new_time == input_tp)
print(ggplot(df_tp, aes(x = genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .95, color = "Red", linewidth = 1, size = 0.8) +
labs(x =paste0("2mM H2O2, OL variants ", deparse1(substitute(input_tp)), " min"), y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),))
}
}
# plot the 2mM H2O2 OL variants at 0min, 90min, 120min timepoints
tp_GFP(0,90,120,240)
files <- dir("input/TrunV_0Pi", pattern = "d01*") # get the file names of the merged
files <- file.path("input//TrunV_0Pi", files)         # this appends the directory to the file names
names(files) <- c("Rep1-0Pi-Ctrl","Rep2-0Pi-Ctrl", "Rep3-0Pi-Ctrl")
tp <- c("0min",  "30min", "60min", "90min", "120min", "150min",  "180min", "210min", "240min") # ordered time points
# import and process the data to the format we want
data.TrunV <- map_dfr(files, ~read_csv(., na = c("", "NA", "N/A"), col_types = cols()), .id = "Replicate") %>%
#bind_rows(.id = "Replicate") %>%
filter(!is.na(median),`X Parameter` == "BL1-H", is.na(`Y Parameter`)) %>%
select(Replicate, Group, Sample, Count, median = `X Median`, peak = `X Peak`,
sd = `X SD`, cv = `X %CV`, rCV = `X %rCV`) %>%
separate(Group, into = c('Time', 'Treatment'), sep = "-") %>%
mutate(Time = ordered(Time, levels = tp)) %>%
mutate(Sample = case_when(Sample == "CTA1-GFP-yH298" ~ "yH298-wt",
Sample == "CTA1-GFP-yH299" ~ "yH299-wt",
Sample == "yH343-wt" ~ "yH343-rescue",
Sample == "yH344-wt" ~ "yH344-rescue",
TRUE ~ Sample)) %>%
mutate(Replicate = gsub("\\-.*","", Replicate)) %>%
separate(Sample, into = c("Strain", "genotype"), sep = "-") %>%
filter(!is.na(median)) %>%
arrange(Time)
# To replace the value: ifelse() for a single test, case_when() for multiple test
# \\-: escape character "\\" used to escape the special meaning of -, instead take - as a common regex pattern. Or we can specify the - as a regex pattern within a square bracket class [-]
#.*: This part matches any sequence of characters (.* is a common regex pattern for "any character, zero or more times"). metacharacter
# recode the genotype
levels <- c(WT = "wt", PC = "rescue",`4OL` = "4OL", `6OL` = "6OL", `8OL` = "8OL", `10OL` = "10OL")
oxi.ol.dat <- data.ol.oxi %>%
filter(genotype %in% c("wt", "4OL", "6OL", "8OL", "10OL","rescue")) %>%
select(Time, replicate = Replicate, genotype, median) %>%
mutate(Genotype = fct_recode(genotype, !!!levels)) %>%
mutate(new_median =median/1000) %>%
mutate(new_time = as.numeric(gsub("min","",Time)))%>%
arrange(new_time, genotype, replicate)
genotype_color <- RColorBrewer::brewer.pal(8, "Dark2")[c(8, 7, 6, 1, 5, 4)]
names(genotype_color) <- names(levels)
oxi.ol.dat %>%
filter(!is.na(new_median)) %>%
ggplot(aes(x = new_time, y = new_median, color = Genotype)) + p.timecourse +
scale_color_manual(values= genotype_color, limits = names(genotype_color)) +
xlab("2mM H2O2, time (min)")
#scale_y_continuous(limits = c(NA, 22))
ggsave("output/OL_oxi.png", width = 6, height = 8)
##### 2mM H2O2 OL timepoint plot function
tp_GFP <- function(...){
all_tp <- list(...)
for (input_tp in all_tp) {
df_tp <- oxi.ol.dat %>% filter(new_time == input_tp)
print(ggplot(df_tp, aes(x = genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .95, color = "Red", linewidth = 1, size = 0.8) +
labs(x =paste0("2mM H2O2, OL variants ", deparse1(substitute(input_tp)), " min"), y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),))
}
}
# plot the 2mM H2O2 OL variants at 0min, 90min, 120min timepoints
tp_GFP(0,90,120,240)
files <- dir("input/TrunV_0Pi", pattern = "d01*") # get the file names of the merged
files <- file.path("input//TrunV_0Pi", files)         # this appends the directory to the file names
names(files) <- c("Rep1-0Pi-Ctrl","Rep2-0Pi-Ctrl", "Rep3-0Pi-Ctrl")
tp <- c("0min",  "30min", "60min", "90min", "120min", "150min",  "180min", "210min", "240min") # ordered time points
# import and process the data to the format we want
data.TrunV <- map_dfr(files, ~read_csv(., na = c("", "NA", "N/A"), col_types = cols()), .id = "Replicate") %>%
#bind_rows(.id = "Replicate") %>%
filter(!is.na(median),`X Parameter` == "BL1-H", is.na(`Y Parameter`)) %>%
select(Replicate, Group, Sample, Count, median = `X Median`, peak = `X Peak`,
sd = `X SD`, cv = `X %CV`, rCV = `X %rCV`) %>%
separate(Group, into = c('Time', 'Treatment'), sep = "-") %>%
mutate(Time = ordered(Time, levels = tp)) %>%
mutate(Sample = case_when(Sample == "CTA1-GFP-yH298" ~ "yH298-wt",
Sample == "CTA1-GFP-yH299" ~ "yH299-wt",
Sample == "yH343-wt" ~ "yH343-rescue",
Sample == "yH344-wt" ~ "yH344-rescue",
TRUE ~ Sample)) %>%
mutate(Replicate = gsub("\\-.*","", Replicate)) %>%
separate(Sample, into = c("Strain", "genotype"), sep = "-") %>%
filter(!is.na(median)) %>%
arrange(Time)
# To replace the value: ifelse() for a single test, case_when() for multiple test
# \\-: escape character "\\" used to escape the special meaning of -, instead take - as a common regex pattern. Or we can specify the - as a regex pattern within a square bracket class [-]
#.*: This part matches any sequence of characters (.* is a common regex pattern for "any character, zero or more times"). metacharacter
# recode the genotype
levels <- c(WT = "wt", `PC` = "rescue", `2V` = "2V",`4V` = "4V", `6V` = "6V", `8V` = "8V")
pi.dat <- data.TrunV %>%
filter(genotype %in% c("wt", "2V", "4V", "6V", "8V","rescue")) %>%
select(Time, replicate = Replicate, genotype, median) %>%
mutate(Genotype = fct_recode(genotype, !!!levels)) %>%
mutate(new_median =median/1000) %>%
mutate(new_time = as.numeric(gsub("min","",Time)))%>%
arrange(new_time, genotype, replicate)
genotype_color <- RColorBrewer::brewer.pal(8, "Dark2")[c(8, 7, 6, 1, 5, 4)]
names(genotype_color) <- names(levels)
pi.dat %>%
filter(!is.na(new_median)) %>%
ggplot(aes(x = new_time, y = new_median, color = Genotype)) + p.timecourse +
scale_color_manual(values= genotype_color, limits = names(genotype_color)) +
xlab("Phosphate starvation, time (min)")
#scale_y_continuous(limits = c(NA, 22))
#ggsave("output/TrunV_0Pi.png", width = 6, height = 8)
files <- dir("input/TrunV_2mMH2O2", pattern = "d*") # get the file names of the merged
files <- file.path("input//TrunV_2mMH2O2", files)      # this appends the directory to the file names
names(files) <- c("Rep1-2mMH2O2","Rep2-2mMH2O2", "Rep3-2mMH2O2")
tp <- c("0min",  "30min", "60min", "90min", "120min", "150min",  "180min", "210min", "240min") # ordered time points
# import and process the data to the format we want
data.TrunV.oxi <- map_dfr(files, ~read_csv(., na = c("", "NA", "N/A"), col_types = cols()), .id = "Replicate") %>%
#bind_rows(.id = "Replicate") %>%
filter(`X Parameter` == "BL1-H", is.na(`Y Parameter`)) %>%
select(Replicate, Group, Sample, Count, median = `X Median`, peak = `X Peak`,
sd = `X SD`, cv = `X %CV`, rCV = `X %rCV`) %>%
separate(Group, into = c('Time', 'Treatment'), sep = "-") %>%
mutate(Time = ordered(Time, levels = tp)) %>%
mutate(Sample = case_when(Sample == "CTA1-GFP-yH298" ~ "yH298-wt",
Sample == "CTA1-GFP-yH299" ~ "yH299-wt",
Sample == "yH343-wt" ~ "yH343-rescue",
Sample == "yH344-wt" ~ "yH344-rescue",
TRUE ~ Sample)) %>%
mutate(Replicate = gsub("\\-.*","", Replicate)) %>% #
separate(Sample, into = c("Strain", "genotype"), sep = "-") %>%
filter(!is.na(median)) %>%
arrange(Time)
# To replace the value: ifelse() for a single test, case_when() for multiple test
# \\-: escape character "\\" used to escape the special meaning of -, instead take - as a common regex pattern. Or we can specify the - as a regex pattern within a square bracket class [-]
#.*: This part matches any sequence of characters (.* is a common regex pattern for "any character, zero or more times"). metacharacter
# recode the genotype
levels <- c(WT = "wt", `PC` = "rescue", `2V` = "2V",`4V` = "4V", `6V` = "6V", `8V` = "8V")
oxi.TrunV.dat <- data.TrunV.oxi  %>%
filter(genotype %in% c("wt", "2V", "4V", "6V", "8V","rescue")) %>%
select(Time, replicate = Replicate, genotype, median) %>%
mutate(Genotype = fct_recode(genotype, !!!levels)) %>%
mutate(new_median =median/1000) %>%
mutate(new_time = as.numeric(gsub("min","",Time)))%>%
arrange(new_time, genotype, replicate)
genotype_color <- RColorBrewer::brewer.pal(8, "Dark2")[c(8, 7, 6, 1, 5, 4)]
names(genotype_color) <- names(levels)
oxi.TrunV.dat %>%
filter(!is.na(new_median)) %>%
ggplot(aes(x = new_time, y = new_median, color = Genotype)) + p.timecourse +
scale_color_manual(values= genotype_color, limits = names(genotype_color)) +
xlab("2mM H2O2 stress, time (min)")
#scale_y_continuous(limits = c(NA, 22))
ggsave("output/TrunV_oxi.png", width = 6, height = 8)
##### 2mM H2O2 OL timepoint plot function
tp_GFP <- function(...){
all_tp <- list(...)
for (input_tp in all_tp) {
df_tp <- oxi.TrunV.dat %>% filter(new_time == input_tp)
print(ggplot(df_tp, aes(x = genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .95, color = "Red", linewidth = 1, size = 0.8) +
labs(x =paste0("2mM H2O2, OL variants ", deparse1(substitute(input_tp)), " min"), y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),))
}
}
# plot the 2mM H2O2 OL variants at 0min, 90min, 120min timepoints
tp_GFP(0,90,120,240)
# recode the genotype
levels <- c(WT = "wt", `PC` = "rescue", `2V` = "2V",`4V` = "4V", `6V` = "6V", `8V` = "8V")
oxi.TrunV.dat <- data.TrunV.oxi  %>%
filter(genotype %in% c("wt", "2V", "4V", "6V", "8V","rescue")) %>%
select(Time, replicate = Replicate, genotype, median) %>%
mutate(Genotype = fct_recode(genotype, !!!levels)) %>%
mutate(new_median =median/1000) %>%
mutate(new_time = as.numeric(gsub("min","",Time)))%>%
arrange(new_time, genotype, replicate)
genotype_color <- RColorBrewer::brewer.pal(8, "Dark2")[c(8, 7, 6, 1, 5, 4)]
names(genotype_color) <- names(levels)
oxi.TrunV.dat %>%
filter(!is.na(new_median)) %>%
ggplot(aes(x = new_time, y = new_median, color = Genotype)) + p.timecourse +
scale_color_manual(values= genotype_color, limits = names(genotype_color)) +
xlab("2mM H2O2 stress, time (min)")
#scale_y_continuous(limits = c(NA, 22))
#ggsave("output/TrunV_oxi.png", width = 6, height = 8)
##### 2mM H2O2 OL timepoint plot function
tp_GFP <- function(...){
all_tp <- list(...)
for (input_tp in all_tp) {
df_tp <- oxi.TrunV.dat %>% filter(new_time == input_tp) %>% mutate(Genotype = factor(Genotype, levels = c("wt", "rescue", "2V", "4v", "6v", "8v")))
print(ggplot(df_tp, aes(x = Genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .95, color = "Red", linewidth = 1, size = 0.8) +
labs(x =paste0("2mM H2O2, OL variants ", deparse1(substitute(input_tp)), " min"), y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),))
}
}
# plot the 2mM H2O2 OL variants at 0min, 90min, 120min timepoints
tp_GFP(0,90,120,240)
# recode the genotype
levels <- c(WT = "wt", `PC` = "rescue", `2V` = "2V",`4V` = "4V", `6V` = "6V", `8V` = "8V")
oxi.TrunV.dat <- data.TrunV.oxi  %>%
filter(genotype %in% c("wt", "2V", "4V", "6V", "8V","rescue")) %>%
select(Time, replicate = Replicate, genotype, median) %>%
mutate(Genotype = fct_recode(genotype, !!!levels)) %>%
mutate(new_median =median/1000) %>%
mutate(new_time = as.numeric(gsub("min","",Time)))%>%
arrange(new_time, genotype, replicate)
genotype_color <- RColorBrewer::brewer.pal(8, "Dark2")[c(8, 7, 6, 1, 5, 4)]
names(genotype_color) <- names(levels)
oxi.TrunV.dat %>%
filter(!is.na(new_median)) %>%
ggplot(aes(x = new_time, y = new_median, color = Genotype)) + p.timecourse +
scale_color_manual(values= genotype_color, limits = names(genotype_color)) +
xlab("2mM H2O2 stress, time (min)")
#scale_y_continuous(limits = c(NA, 22))
#ggsave("output/TrunV_oxi.png", width = 6, height = 8)
##### 2mM H2O2 OL timepoint plot function
tp_GFP <- function(...){
all_tp <- list(...)
for (input_tp in all_tp) {
df_tp <- oxi.TrunV.dat %>% filter(new_time == input_tp)
print(ggplot(df_tp, aes(x = Genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .95, color = "Red", linewidth = 1, size = 0.8) +
labs(x =paste0("2mM H2O2, OL variants ", deparse1(substitute(input_tp)), " min"), y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),))
}
}
# plot the 2mM H2O2 OL variants at 0min, 90min, 120min timepoints
tp_GFP(0,90,120,240)
# recode the genotype
levels <- c(WT = "wt", `PC` = "rescue", `2V` = "2V",`4V` = "4V", `6V` = "6V", `8V` = "8V")
oxi.TrunV.dat <- data.TrunV.oxi  %>%
filter(genotype %in% c("wt", "2V", "4V", "6V", "8V","rescue")) %>%
select(Time, replicate = Replicate, genotype, median) %>%
mutate(Genotype = fct_recode(genotype, !!!levels)) %>%
mutate(new_median =median/1000) %>%
mutate(new_time = as.numeric(gsub("min","",Time)))%>%
arrange(new_time, genotype, replicate)
genotype_color <- RColorBrewer::brewer.pal(8, "Dark2")[c(8, 7, 6, 1, 5, 4)]
names(genotype_color) <- names(levels)
oxi.TrunV.dat %>%
filter(!is.na(new_median)) %>%
ggplot(aes(x = new_time, y = new_median, color = Genotype)) + p.timecourse +
scale_color_manual(values= genotype_color, limits = names(genotype_color)) +
xlab("2mM H2O2 stress, time (min)")
#scale_y_continuous(limits = c(NA, 22))
#ggsave("output/TrunV_oxi.png", width = 6, height = 8)
##### 2mM H2O2 OL timepoint plot function
tp_GFP <- function(...){
all_tp <- list(...)
for (input_tp in all_tp) {
df_tp <- oxi.TrunV.dat %>% filter(new_time == input_tp) %>% mutate(genotype = factor(genotype, levels = levels))
print(ggplot(df_tp, aes(x = genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .95, color = "Red", linewidth = 1, size = 0.8) +
labs(x =paste0("2mM H2O2, OL variants ", deparse1(substitute(input_tp)), " min"), y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),))
}
}
# plot the 2mM H2O2 OL variants at 0min, 90min, 120min timepoints
tp_GFP(0,90,120,240)
# recode the genotype
levels <- c(WT = "wt", PC = "rescue",`4OL` = "4OL", `6OL` = "6OL", `8OL` = "8OL", `10OL` = "10OL")
oxi.ol.dat <- data.ol.oxi %>%
filter(genotype %in% c("wt", "4OL", "6OL", "8OL", "10OL","rescue")) %>%
select(Time, replicate = Replicate, genotype, median) %>%
mutate(Genotype = fct_recode(genotype, !!!levels)) %>%
mutate(new_median =median/1000) %>%
mutate(new_time = as.numeric(gsub("min","",Time)))%>%
arrange(new_time, genotype, replicate)
genotype_color <- RColorBrewer::brewer.pal(8, "Dark2")[c(8, 7, 6, 1, 5, 4)]
names(genotype_color) <- names(levels)
oxi.ol.dat %>%
filter(!is.na(new_median)) %>%
ggplot(aes(x = new_time, y = new_median, color = Genotype)) + p.timecourse +
scale_color_manual(values= genotype_color, limits = names(genotype_color)) +
xlab("2mM H2O2, time (min)")
#scale_y_continuous(limits = c(NA, 22))
#ggsave("output/OL_oxi.png", width = 6, height = 8)
##### 2mM H2O2 OL timepoint plot function
tp_GFP <- function(...){
all_tp <- list(...)
for (input_tp in all_tp) {
df_tp <- oxi.ol.dat %>% filter(new_time == input_tp) %>% mutate(genotype = factor(genotype, levels = levels))
print(ggplot(df_tp, aes(x = genotype, y = new_median, fill = Genotype)) +
geom_point() +
stat_summary(fun.data = "mean_cl_boot", conf.int = .95, color = "Red", linewidth = 1, size = 0.8) +
labs(x =paste0("2mM H2O2, OL variants ", deparse1(substitute(input_tp)), " min"), y = "Cta1-GFP protein level (a.u.)") +
theme_cowplot(line_size = 0.7, font_size = 14) +
theme(legend.position = "none",
axis.title = element_text(size = rel(1)),
axis.text.x = element_text(hjust=0.5), axis.text = element_text(size = rel(1)),))
}
}
# plot the 2mM H2O2 OL variants at 0min, 90min, 120min timepoints
tp_GFP(0,90,120,240)
